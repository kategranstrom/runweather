{"version":3,"sources":["Run.js","SideBar.js","Utils.js","Modal.js","AddRunForm.js","AddRun.js","NavBar.js","EditRunForm.js","EditRun.js","RunManager.js","App.js","serviceWorker.js","index.js"],"names":["Run","milliseconds","date","Date","toLocaleString","month","getDate","run","this","props","className","temperature","getDateString","topLayer","React","Component","SideBar","state","sideBarOpen","newExtra","handleToggleSidebar","bind","handleChange","addExtra","deleteExtra","setState","e","target","value","preventDefault","newExtras","extras","push","onChangeExtras","extra","splice","indexOf","check","sidebar","onClick","onChangeSortBy","sortBy","map","index","key","onSubmit","type","onChange","placeholder","fetchCurrWeather","fetch","then","response","json","Modal","show","id","children","AddRunForm","n","today","pad","getMonth","getFullYear","Math","round","currWeather","main","temp","feels_like","humidity","wind","speed","weather","description","htmlFor","defaultValue","getTemperature","name","getFeelsLike","getHumidity","getWindSpeed","getDescrption","rows","cols","onCancel","AddRun","getCurrWeather","handleSubmit","data","console","log","params","API","method","headers","body","mode","catch","error","formData","FormData","append","now","getAll","set","JSON","stringify","entries","val","slice","saveWorkout","update","showAddRun","NavBar","toggleAddRun","EditRunForm","selectedExtras","parse","unselectedExtras","filter","includes","feelsLike","bottomLayer","defaultChecked","length","notes","onDelete","EditRun","handleUpdateRun","handleDeleteRun","userId","updateWorkout","deleteWorkout","showEditRun","RunManager","loading","runs","editingRun","getWorkouts","handleDelete","changeSortBy","changeExtras","status","err","fetchWorkouts","sortRuns","sort","a","b","abs","Promise","resolve","newSortBy","handleEditRun","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.00cb1968.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport class Run extends React.Component {\r\n\r\n    getDateString(milliseconds) {\r\n        const date = new Date(milliseconds);\r\n        return /*date.toLocaleString('default', {weekday: 'short'}) + ', ' +*/ date.toLocaleString('default', {month: 'short'}) + ' ' + date.getDate();\r\n    }\r\n\r\n    render() {\r\n        const run = this.props.run;\r\n        return (\r\n            <div>\r\n                <div className=\"weather\">\r\n                    {run.temperature}°C\r\n                </div>\r\n                <div className=\"date\">\r\n                    {this.getDateString(run.date)}\r\n                </div>\r\n                <div className=\"description\">\r\n                    {run.topLayer} headband shorts\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { MdDehaze } from 'react-icons/md';\r\nimport { MdCheck } from 'react-icons/md';\r\nimport { MdHighlightOff } from 'react-icons/md';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport './sidebar.css';\r\n\r\nexport class SideBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sideBarOpen: false,\r\n            newExtra: ''\r\n        }\r\n        this.handleToggleSidebar = this.handleToggleSidebar.bind(this)\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addExtra = this.addExtra.bind(this);;\r\n        this.deleteExtra = this.deleteExtra.bind(this);\r\n    }\r\n\r\n    handleToggleSidebar() {\r\n        this.setState({\r\n            sideBarOpen: !this.state.sideBarOpen\r\n        });\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({newExtra: e.target.value})\r\n    }\r\n\r\n    addExtra(e) {\r\n        e.preventDefault();\r\n        if(this.state.newExtra === '') return;\r\n        let newExtras = this.props.extras;\r\n        newExtras.push(this.state.newExtra);\r\n        this.setState({\r\n            newExtra: ''\r\n        })\r\n        this.props.onChangeExtras(newExtras);\r\n    }\r\n\r\n    deleteExtra(extra) {\r\n        let newExtras = this.props.extras;\r\n        newExtras.splice(newExtras.indexOf(extra), 1);\r\n        this.props.onChangeExtras(newExtras);\r\n    }\r\n\r\n    render() {\r\n        const check = (\r\n            <div className=\"check\">\r\n                <MdCheck />\r\n            </div>\r\n        );\r\n        const sidebar = (\r\n            <div className=\"sidebar\">\r\n                <div className=\"listitem\">\r\n                    Sort By\r\n                </div>\r\n                <div className=\"subsortby\" onClick={() => this.props.onChangeSortBy('date')}>\r\n                    {this.props.sortBy === \"date\" ? check : <div className=\"spacer\"></div>}\r\n                    Date\r\n                </div>\r\n                <div className=\"subsortby\" onClick={() => this.props.onChangeSortBy('temperature')}>\r\n                    {this.props.sortBy === \"temperature\" ? check : <div className=\"spacer\"></div>}\r\n                    Temperature\r\n                </div>\r\n                <div className=\"subsortby\" onClick={() => this.props.onChangeSortBy('mostrelevant')}>\r\n                    {this.props.sortBy === \"mostrelevant\" ? check : <div className=\"spacer\"></div>}\r\n                    Most Relevant\r\n                </div>\r\n                <div className=\"listitem\">\r\n                    Also Track\r\n                </div>\r\n                {this.props.extras.map((extra, index) => (\r\n                    <div className=\"subalsotrack\" key={index}>\r\n                        {extra}\r\n                        <div className=\"righticon\" onClick={() => this.deleteExtra(extra)}> <MdHighlightOff /> </div>\r\n                    </div>\r\n                ))}\r\n                <form onSubmit={this.addExtra}>\r\n                    <div className=\"lefticon\" onClick={this.addExtra}> <MdAdd /> </div>\r\n                    <input type=\"text\" value={this.state.newExtra} onChange={this.handleChange} placeholder = \"Add new...\" className=\"subalsotrack\" />\r\n                </form>\r\n            </div>\r\n        );\r\n        return (\r\n            <div>\r\n                <div className=\"menuicon\" onClick={this.handleToggleSidebar}>\r\n                    <MdDehaze />\r\n                </div>\r\n                {this.state.sideBarOpen ? sidebar : <div></div>}\r\n            </div>\r\n        )\r\n    }\r\n}","export const fetchCurrWeather = function () {\r\n    var key = 'cfa60c427275f8728cc2d1a469c4edb2';\r\n    //KGTODO: make this variable\r\n    var city = 'Revelstoke'\r\n    return fetch('https://api.openweathermap.org/data/2.5/weather?q=' + city + '&appid=' + key)\r\n        .then(function (response) { return response.json() })\r\n}","import React from 'react';\r\nimport \"./modal.css\";\r\nexport class Modal extends React.Component {\r\n\r\n    render() {\r\n        if(!this.props.show) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div className=\"overlay\">\r\n                <div className=\"modal\" id=\"modal\">\r\n                    <div className=\"content\">{this.props.children}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport \"./form.css\";\r\n\r\nexport class AddRunForm extends React.Component {\r\n    pad(n) {\r\n        return (n < 10) ? \"0\" + n : n;\r\n    }\r\n    getDate() {\r\n        const today = new Date();\r\n        const month = this.pad(today.getMonth() + 1);\r\n        const date = this.pad(today.getDate());\r\n        return today.getFullYear() + '-' + month + '-' + date;\r\n    }\r\n\r\n    getTemperature() {\r\n        return Math.round((this.props.currWeather.main.temp - 273.15) * 100) / 100;\r\n    }\r\n\r\n    getFeelsLike() {\r\n        return Math.round((this.props.currWeather.main.feels_like - 273.15) * 100) / 100;\r\n    }\r\n\r\n    getHumidity() {\r\n        return this.props.currWeather.main.humidity;\r\n    }\r\n\r\n    getWindSpeed() {\r\n        return this.props.currWeather.wind.speed*3.6;\r\n    }\r\n\r\n    getDescrption() {\r\n        return this.props.currWeather.weather[0].description;\r\n    }\r\n\r\n    render() {\r\n        //KGTODO: edit to use name='extras', which varies based on user input\r\n        return (\r\n            <form onSubmit={this.props.onSubmit}>\r\n                <label htmlFor=\"temperature\">Temperature (°C) </label>\r\n                <input type=\"number\" defaultValue={this.getTemperature()} id=\"temperature\" name=\"temperature\" />\r\n                <br />\r\n                <label htmlFor=\"feelsLike\">Feels Like (°C) </label>\r\n                <input type=\"number\" defaultValue={this.getFeelsLike()} id=\"feelsLike\" name=\"feelsLike\" />\r\n                <br />\r\n                <label htmlFor=\"humidity\">Humidity (%)</label>\r\n                <input type=\"number\" defaultValue={this.getHumidity()} id=\"humidity\" name=\"humidity\" />\r\n                <br />\r\n                <label htmlFor=\"windSpeed\">Wind Speed (km/h)</label>\r\n                <input type=\"number\" defaultValue={this.getWindSpeed()} id=\"windSpeed\" name=\"windSpeed\" />\r\n                <br />\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input type=\"text\" defaultValue={this.getDescrption()} id=\"description\" name=\"description\" />\r\n                <br />\r\n                <label htmlFor=\"topLayer\">Top Layer</label>\r\n                <input type=\"text\" id=\"topLayer\" name=\"topLayer\" />\r\n                <br />\r\n                <label htmlFor=\"bottomLayer\">Bottom Layer</label>\r\n                <input type=\"text\" id=\"bottomLayer\" name=\"bottomLayer\" />\r\n                <br />\r\n                {this.props.extras.map((extra, index) => (\r\n                    <div className=\"inline\" key={index}>\r\n                        <label htmlFor={extra}>{extra}</label>\r\n                        <input type=\"checkbox\" id={extra} value={extra} name=\"extras\" />\r\n                    </div>\r\n                ))}\r\n                <br />\r\n                <label htmlFor=\"notes\">Notes</label>\r\n                <br />\r\n                <textarea id=\"notes\" name=\"notes\" rows=\"2\" cols=\"30\"></textarea>\r\n                <br />\r\n                <button className=\"action\" onClick={this.props.onCancel}>Cancel</button>\r\n                <input type=\"submit\" className=\"action\" name=\"submit\" value=\"Add\" />\r\n            </form>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { fetchCurrWeather } from './Utils'\r\nimport { Modal } from './Modal';\r\nimport { AddRunForm } from './AddRunForm';\r\n\r\nconst API = 'http://localhost:8000'\r\n\r\nexport class AddRun extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currWeather: null,\r\n        }\r\n        this.getCurrWeather = this.getCurrWeather.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //KGTODO: will the weather update enough?\r\n        this.getCurrWeather();\r\n    }\r\n\r\n    getCurrWeather() {\r\n        fetchCurrWeather().then(function (data) {\r\n            console.log(data)\r\n            this.setState({\r\n                currWeather: data\r\n            })\r\n        }.bind(this))\r\n    }\r\n\r\n    saveWorkout(params) {\r\n        //KGTODO: edit db to store new params --> variable params?\r\n        fetch(API + '/api/workout/', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\r\n            },\r\n            body: params,\r\n            mode: 'no-cors'\r\n        }).then(function (data) {\r\n            console.log('Request succeeded with JSON response', data);\r\n        }).catch(function (error) {\r\n            console.log('Request failed', error)\r\n        })\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        //KGTODO: use formData.append\r\n        const formData = new FormData(e.target);\r\n        formData.append('userId', 1);\r\n        formData.append('date', Date.now())\r\n        const extras = formData.getAll('extras');\r\n        formData.set('extras', JSON.stringify(extras));\r\n        var params = '';\r\n        for (var [key, val] of formData.entries()) {\r\n            console.error(key, val)\r\n            params += key + '=' + val + '&';\r\n        }\r\n        params = params.slice(0, -1);\r\n        this.saveWorkout(params);\r\n        e.preventDefault();\r\n        this.props.update();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal show={this.props.showAddRun}>\r\n                <h2>Add Run</h2>\r\n                <AddRunForm onSubmit={this.handleSubmit} onCancel={this.props.onCancel} currWeather={this.state.currWeather} extras={this.props.extras} />\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { AddRun } from './AddRun';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport './navbar.css'\r\n\r\nexport class NavBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showAddRun: false\r\n        }\r\n        this.toggleAddRun = this.toggleAddRun.bind(this);\r\n        this.update = this.update.bind(this);\r\n    }\r\n\r\n    toggleAddRun(e) {\r\n        this.setState({\r\n            showAddRun: !this.state.showAddRun\r\n        })\r\n    }\r\n\r\n    update() {\r\n        this.toggleAddRun();\r\n        this.props.update();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"navbar\">\r\n                    <div className=\"navitem\" onClick={this.toggleAddRun}>\r\n                        <div className=\"navicon\"> <MdAdd /> </div>\r\n                        Add Run\r\n                    </div>\r\n                </div>\r\n                <AddRun showAddRun={this.state.showAddRun} onCancel={this.toggleAddRun} update={this.update} extras={this.props.extras}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport \"./form.css\";\r\n\r\nexport class EditRunForm extends React.Component {\r\n    getDateString(milliseconds) {\r\n        const date = new Date(milliseconds);\r\n        return /*date.toLocaleString('default', {weekday: 'short'}) + ', ' +*/ date.toLocaleString('default', {month: 'short'}) + ' ' + date.getDate();\r\n    }\r\n\r\n    render() {\r\n        const run = this.props.run || {};\r\n        const selectedExtras = JSON.parse(run.extras) || [];\r\n        const unselectedExtras = this.props.extras.filter(extra => !selectedExtras.includes(extra))\r\n        console.error('run', run)\r\n        return (\r\n            <div>\r\n                <div className=\"date\">{this.getDateString(run.date)}</div>\r\n                <div className=\"weather\">Temp: {run.temperature} Feels like: {run.feelsLike} Humidity: {run.humidity}</div>\r\n                <form onSubmit={this.props.onSubmit}>\r\n                <label htmlFor=\"topLayer\">Top Layer</label>\r\n                <input type=\"text\" defaultValue={run.topLayer} id=\"topLayer\" name=\"topLayer\" />\r\n                <br />\r\n                <label htmlFor=\"bottomLayer\">Bottom Layer</label>\r\n                <input type=\"text\" defaultValue={run.bottomLayer} id=\"bottomLayer\" name=\"bottomLayer\" />\r\n                <br />\r\n                {selectedExtras.map((extra, index) => (\r\n                    <div className=\"inline\" key={index}>\r\n                        <label htmlFor={extra}>{extra}</label>\r\n                        <input type=\"checkbox\" id={extra} value={extra} name=\"extras\" defaultChecked/>\r\n                    </div>\r\n                ))}\r\n                {unselectedExtras.map((extra, index) => (\r\n                    <div className=\"inline\" key={index}>\r\n                        <label htmlFor={extra}>{extra}</label>\r\n                        <input type=\"checkbox\" id={extra} value={extra} name=\"extras\"/>\r\n                    </div>\r\n                ))}\r\n                {unselectedExtras.length || selectedExtras.length ? <br /> : <div></div>}\r\n                <label htmlFor=\"notes\">Notes</label>\r\n                <br />\r\n                <textarea id=\"notes\" defaultValue={run.notes} name=\"notes\" rows=\"2\" cols=\"30\"></textarea>\r\n                <br />\r\n                <button className=\"action\" onClick={this.props.onDelete}>Delete</button>\r\n                <input type=\"submit\" className=\"action\" name=\"submit\" value=\"Save\" />\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Modal } from './Modal';\r\nimport { EditRunForm } from './EditRunForm';\r\n\r\nconst API = 'http://localhost:8000'\r\n\r\nexport class EditRun extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleUpdateRun = this.handleUpdateRun.bind(this);\r\n        this.handleDeleteRun = this.handleDeleteRun.bind(this);\r\n    }\r\n\r\n    updateWorkout(id, params) {\r\n        //KGTODO: edit db to store new params --> variable params?\r\n        fetch(API + '/api/updateworkout/' + id, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\r\n            },\r\n            body: params,\r\n            mode: 'no-cors'\r\n        }).then(function (data) {\r\n            console.log('Request succeeded with JSON response', data);\r\n        }).catch(function (error) {\r\n            console.log('Request failed', error)\r\n        })\r\n    }\r\n\r\n    deleteWorkout(id) {\r\n        fetch('http://localhost:8000/api/workout/delete/' + id)\r\n            .then(function (data) {\r\n                console.log('Request succeeded with JSON response', data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log('Request failed', error);\r\n            });\r\n    }\r\n\r\n    handleUpdateRun(e) {\r\n        const formData = new FormData(e.target);\r\n        const extras = formData.getAll('extras');\r\n        formData.set('extras', JSON.stringify(extras));\r\n        const run = this.props.run;\r\n        var params = 'userId=' + run.userId + '&date=' + run.date + '&temperature=' + run.temperature + '&';\r\n        for (var [key, val] of formData.entries()) {\r\n            params += key + '=' + val + '&';\r\n        }\r\n        params = params.slice(0, -1);\r\n        this.updateWorkout(run.id, params);\r\n        e.preventDefault();\r\n        this.props.update();\r\n    }\r\n\r\n    handleDeleteRun(e) {\r\n        this.deleteWorkout(this.props.run.id)\r\n        this.props.update();\r\n    }\r\n\r\n    render() {\r\n        const showEditRun = this.props.run ? true : false;\r\n        return (\r\n            <Modal show={showEditRun}>\r\n                <EditRunForm run={this.props.run} extras={this.props.extras} onSubmit={this.handleUpdateRun} onDelete={this.handleDeleteRun} />\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Run } from './Run';\r\nimport { SideBar } from './SideBar';\r\nimport { NavBar } from './NavBar';\r\nimport { EditRun } from './EditRun';\r\nimport { fetchCurrWeather } from './Utils';\r\n\r\nconst API = 'http://localhost:8000';\r\n\r\nexport class RunManager extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            runs: [],\r\n            sortBy: 'date',\r\n            extras: ['Gloves', 'Headband', 'Running Hat'],\r\n            editingRun: null\r\n        }\r\n        this.getWorkouts = this.getWorkouts.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.changeSortBy = this.changeSortBy.bind(this);\r\n        this.changeExtras = this.changeExtras.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getWorkouts();\r\n    }\r\n\r\n    fetchWorkouts() {\r\n        return fetch(API + '/api/workouts')\r\n            .then(\r\n                function (response) {\r\n                    if (response.status !== 200) {\r\n                        console.log('Looks like there was a problem. Status Code: ' +\r\n                            response.status);\r\n                        return;\r\n                    }\r\n\r\n                    // Examine the text in the response\r\n                    return response.json().then(function (data) {\r\n                        return data;\r\n                    });\r\n                }\r\n            )\r\n            .catch(function (err) {\r\n                console.log('Fetch Error :-S', err);\r\n            });\r\n    }\r\n\r\n    getWorkouts() {\r\n        this.fetchWorkouts().then(function (response) {\r\n            const runs = response.data || [];\r\n            this.sortRuns(runs).then(function (runs) {\r\n                this.setState({\r\n                    loading: false,\r\n                    runs: runs\r\n                })\r\n            }.bind(this));\r\n        }.bind(this));\r\n    }\r\n\r\n    sortRuns(runs) {\r\n        if(this.state.sortBy ===  'mostrelevant') {\r\n            return fetchCurrWeather().then(function(data) {\r\n                const feelsLike = ((data.main.feels_like - 273.15) * 100) / 100;\r\n                return runs.sort((a, b) => Math.abs(a['feelsLike'] - feelsLike) - Math.abs(b['feelsLike'] - feelsLike));\r\n            });\r\n        } else {\r\n            return Promise.resolve(runs.sort((a, b) => b[this.state.sortBy] - a[this.state.sortBy]));\r\n        }\r\n    }\r\n\r\n    handleEditRun(run) {\r\n        this.setState({\r\n            editingRun: run\r\n        })\r\n    }\r\n\r\n    handleDelete() {\r\n        this.setState({\r\n            editingRun: null\r\n        })\r\n        this.getWorkouts();\r\n    }\r\n\r\n    changeSortBy(newSortBy) {\r\n        this.setState({\r\n            sortBy: newSortBy\r\n        })\r\n        this.getWorkouts();\r\n    }\r\n\r\n    changeExtras(newExtras) {\r\n        this.setState({\r\n            extras: newExtras\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header className=\"App-header\">\r\n                    <SideBar sortBy={this.state.sortBy} onChangeSortBy={this.changeSortBy} extras={this.state.extras} onChangeExtras={this.changeExtras}/>\r\n                    <h1>Runs</h1>\r\n                </header>\r\n                <div className=\"content-wrapper\">\r\n                    {this.state.runs.map((run, index) => (\r\n                        <div key={index}>\r\n                            <button className=\"card\" onClick={e => this.handleEditRun(run)}>\r\n                                <Run run={run} />\r\n                            </button>\r\n                            <br />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <EditRun run={this.state.editingRun} extras={this.state.extras} update={this.handleDelete} />\r\n                <NavBar update={this.getWorkouts} extras={this.state.extras}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport { RunManager } from './RunManager';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      < RunManager />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}